///////////////////////////// IAMove /////////////////////////////

using System.Numerics;
using System;
using UnityEngine;
using UnityEngine.AI;

public class IAMove : MonoBehaviour
{
    public NavMeshAgent agent;

    UnityEngine.Vector3 startPoint;
    UnityEngine.Vector3 finishPoint;

    void Awake()
    {
        startPoint  = GameObject.FindGameObjectWithTag("Start").transform.position;
        finishPoint = GameObject.FindGameObjectWithTag("Stop").transform.position;
        Debug.Log("AWAKE");
    }

    // Start is called before the first frame update
    void Start()
    {
        Debug.Log("START");
    }
    

    // Update is called once per frame
    void Update()
    {
        Debug.Log(startPoint);
        Debug.Log(finishPoint);
        agent.SetDestination(finishPoint);
        Debug.Log("UPDATE");
    }

///////////////////////////// NPCMove (v1) /////////////////////////////

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class IAMove : MonoBehaviour
{
    [SerializeField]
    Transform _destination;

    NavMeshAgent _navMeshAgent;

    private void SetDestination()
    {
        if(_destination != null)
        {
            Vector3 targetVector = _destination.transform.position;
            _navMeshAgent.SetDestination(targetVector);
        }
    }

    // Start is called before the first frame update
    void Start()
    {
        _navMeshAgent = this.GetComponent<NavMeshAgent>();

        if(_navMeshAgent == null)
        {
            Debug.LogError("Nav Mesh Agent n\'est pas attaché à " + gameObject.name);
        }
        else
        {
            SetDestination();
        }
    }
}

///////////////////////////// NavMeshBaker (v1) /////////////////////////////


//using System.Diagnostics;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class NavMeshBaker : MonoBehaviour
{
    [SerializeField] NavMeshSurface[] navMeshSurfaces;

    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {   
        for(int i = 0; i < navMeshSurfaces.Length; i++)
        {
            navMeshSurfaces[i].BuildNavMesh();
        }
    }

    public void navMesh()
    {
        
    }
}

///////////////////////////// NavMeshBaker (v2) /////////////////////////////

//using System.Diagnostics;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class NavMeshBaker : MonoBehaviour
{
    [SerializeField] NavMeshSurface navMeshSurfaces;
    private bool testPath;
    private NavMeshPath path;
    //private NavMeshAgent agent = GetComponent<NPCMove>().getAgent();

    private UnityEngine.Vector3 finishPoint ;//= GetComponent<NPCMove>().getFinishPoint();
    // Start is called before the first frame update
    void Start()
    {
        navMeshSurfaces.BuildNavMesh();
        path = new NavMeshPath();
        //testPath = agent.CalculatePath(finishPoint, path);
        //}
        //if(testPath == true) return true;
        //else return false;
    }

    // Update is called once per frame
    void Update()
    {   
        //finishPoint = GameObject.FindGameObjectWithTag("Stop").transform.position;
        bool res = NavMeshCalculate(navMeshSurfaces);
        Debug.Log(res);
        /*
        for(int i = 0; i < navMeshSurfaces.Length; i++)
        {
            navMeshSurfaces[i].BuildNavMesh();
        }

        testPath = CalculatePath(finishPoint, NavMeshBaker);*/
    }

    bool NavMeshCalculate(NavMeshSurface navMeshSurfaces)
    {
        //for(int i = 0; i < navMeshSurfaces.Length; i++)
        //{
        navMeshSurfaces.BuildNavMesh();
        return true;
        
       
    }
}
